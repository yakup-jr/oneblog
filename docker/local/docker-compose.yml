services:
  proxy:
    build:
      context: ./
    image: haproxy:lts
    container_name: proxy
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
      - ../../config/local/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      app-network:
    depends_on:
      - app
      - db

  db:
    image: postgres:15
    container_name: db
    hostname: db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: oneblog
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    volumes:
      - ../../secrets/local/db_username.txt:/run/secrets/db_username:ro
      - ../../secrets/local/db_password.txt:/run/secrets/db_password:ro
      - /var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$(cat /run/secrets/db_username) -d oneblog" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  app:
    build:
      context: ../../
      dockerfile: ./Dockerfile
    container_name: oneblog
    hostname: oneblog
    volumes:
      - ../../secrets/local/db_username.txt:/run/secrets/db_username:ro
      - ../../secrets/local/db_password.txt:/run/secrets/db_password:ro
      - ../../secrets/local/oauth_google_client_id.txt:/run/secrets/oauth_google_client_id:ro
      - ../../secrets/local/oauth_google_client_secret.txt:/run/secrets/oauth_google_client_secret:ro
      - ../../secrets/local/jwt_secret_key.txt:/run/secrets/jwt_secret_key:ro
      - ../../secrets/local/mail_username.txt:/run/secrets/mail_username:ro
      - ../../secrets/local/mail_password.txt:/run/secrets/mail_password:ro
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DATASOURCE_URL: jdbc:postgresql://db:5432/oneblog
      JWT_ACCESS_TOKEN_EXPIRATION: 3600
      JWT_REFRESH_TOKEN_EXPIRATION: 604800
    depends_on:
      - db
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    networks:
      app-network:
        aliases:
          - oneblog

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - target: 9080
        published: 9080
        protocol: tcp
        mode: host
    volumes:
      - ../../config/local/promtail.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - app-network
    privileged: true
    depends_on:
      - db
      - app

  loki:
    image: grafana/loki:latest
    container_name: loki
    hostname: loki
    volumes:
      - ../../config/local/loki.yml:/etc/loki/loki.yml
      - loki-data:/loki
    command: -config.file=/etc/loki/loki.yml
    ports:
      - target: 3100
        published: 3100
        protocol: tcp
        mode: host
    networks:
      app-network:
        aliases:
          - loki

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    ports:
      - target: 9090
        published: 9090
        protocol: tcp
        mode: host
    volumes:
      - ../../config/local/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    networks:
      app-network:
        aliases:
          - prometheus
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ../../secrets/local/jwt_secret_key.txt:/run/secrets/jwt_secret_key:ro
      - grafanadata:/var/lib/grafana
    networks:
      app-network:
        aliases:
          - grafana
    depends_on:
      - prometheus

volumes:
  db-data:
  grafanadata:
  prometheusdata:
  loki-data:

networks:
  app-network:
