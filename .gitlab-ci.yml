stages:
  - build
  - test
  - deploy

variables:
  GRADLE_IMAGE: 'gradle:8.13.0-jdk21'
  DOCKER_IMAGE: 'docker:stable'
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE_BUILD: whtoy/oneblog
  VERSTION: 1.0.${CI_PIPELINE_IID}


.docker-login: &docker-login
  - echo "$DOCKER_HUB_PAT" | docker login $DOCKER_REGISTRY -u "$DOCKER_HUB_LOGIN" --password-stdin


build:
  stage: build
  image: $GRADLE_IMAGE
  script:
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar

test:
  stage: test
  image: $GRADLE_IMAGE
  services:
    - name: docker:dind
      command: ["--tls=false"]
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    TESTCONTAINERS_RYUK_DISABLED: "true"
    TC_REUSE_CONTAINER: "true"
    TESTCONTAINERS_REUSE_ENABLE: "true"
    DOCKER_API_VERSION: "1.41"
    TESTCONTAINERS_CHECKS_DISABLE: "true"

  needs:
    - build
  script:
    - gradle check
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/TEST-*.xml


merge:on-dev:
  stage: deploy
  image: $DOCKER_IMAGE
  services:
    - docker:dind
  needs:
    - build
    - test
  before_script:
    *docker-login
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "push"
      when: on_success
  script:
    - docker build -t $DOCKER_IMAGE_BUILD:dev-latest -t $DOCKER_IMAGE_BUILD:dev-$VERSION
    - docker push $DOCKER_IMAGE_BUILD:dev-latest
    - docker push $DOCKER_IMAGE_BUILD:dev-$VERSION

merge:on-main:
  stage: deploy
  image: $DOCKER_IMAGE
  services:
    - docker:dind
  needs:
    - build
    - test
  before_script:
    - *docker-login
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
      when: on_success
  script:
    - docker build -t $DOCKER_IMAGE_BUILD:latest -t $DOCKER_IMAGE_BUILD:$VERSION
    - docker push $DOCKER_IMAGE_BUILD:latest
    - docker push $DOCKER_IMAGE_BUILD:$VERSION
